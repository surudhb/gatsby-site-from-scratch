{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/resume.js"],"names":["getImageMap","images","regex","hasMultipleImages","limit","reduce","map","image","slug","node","relativePath","match","hasOwnProperty","length","push","childImageSharp","fluid","arr","getInstitutionClass","name","includes","data","institutions","site","siteMetadata","history","allMarkdownRemark","edges","allFile","imageMap","Utils","title","href","target","download","style","fontSize","icon","className","frontmatter","key","id","fields","html","query"],"mappings":"oOAAe,GACbA,YAAa,SAACC,EAAQC,EAAOC,EAA2BC,GACtD,YADoE,IAAzCD,OAAoB,QAAqB,IAAdC,MAAQ,GACvDH,EAAOI,QAAO,SAACC,EAAKC,GACzB,IAAMC,EAAOD,EAAME,KAAKC,aAAaC,MAAMT,GAAO,GAClD,GAAIC,EACF,GAAIG,EAAIM,eAAeJ,GACjBF,EAAIE,GAAMK,QAAUT,GACtBE,EAAIE,GAAMM,KAAKP,EAAME,KAAKM,gBAAgBC,WACvC,CACL,IAAMC,EAAM,GACZA,EAAIH,KAAKP,EAAME,KAAKM,gBAAgBC,OACpCV,EAAIE,GAAQS,OAGdX,EAAIE,GAAQD,EAAME,KAAKM,gBAAgBC,MAEzC,OAAOV,IACN,KAELY,oBAAqB,SAAAC,GACnB,OAAIA,EAAKC,SAAS,YACV,gBACGD,EAAKC,SAAS,UACjB,cAEA,a,kCCzBZ,8IAOe,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAAeD,EAAKE,KAAKC,aAAaF,cAAgB,GACtDG,EAAUJ,EAAKK,kBAAkBC,OAAS,GAC1C1B,EAASoB,EAAKO,QAAQD,OAAS,GAC/BE,EAAWC,IAAM9B,YAAYC,EAAQ,kBAC3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK8B,MAAM,WACX,kBAAC,IAAD,CAAWA,MAAM,UAAjB,IAEE,uBAAGC,KAAK,kCAAkCC,OAAO,SAASC,UAAQ,GAChE,kBAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,QACnBC,KAAM,CAAC,MAAO,iBACdC,UAAU,iBAIhB,kBAAC,IAAD,CAAWA,UAAU,YAAYtB,OAAK,GACpC,6BACA,wBAAIsB,UAAU,yBAAd,gBACA,wBAAIA,UAAU,cACd,6BACA,kBAAC,IAAD,CAAiBD,KAAM,CAAC,MAAO,QAASC,UAAU,sBAClD,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,aACdC,UAAU,oBAEZ,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,SACdC,UAAU,sBAEZ,kBAAC,IAAD,CAAiBD,KAAM,CAAC,MAAO,QAASC,UAAU,qBAClD,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,SACdC,UAAU,uBAEZ,6BACA,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,SACdC,UAAU,yBAEZ,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,QACdC,UAAU,wBAEZ,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,aACdC,UAAU,2BAEZ,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,QACdC,UAAU,wBAEZ,6BACA,kBAAC,IAAD,CACED,KAAM,CAAC,MAAO,cACdC,UAAU,iBAEZ,kBAAC,IAAD,CAAiBD,KAAM,CAAC,MAAO,QAASC,UAAU,iBAClD,kBAAC,IAAD,CAAiBD,KAAM,CAAC,MAAO,UAAWC,UAAU,iBAEpD,wBAAIA,UAAU,yBAAd,aACA,wBAAIA,UAAU,cACd,6BACA,kBAAC,IAAD,CAAKA,UAAU,eACZhB,EAAahB,KAAI,SAAAiC,GAAW,OAC3B,kBAAC,IAAD,CAAKD,UAAU,mBACb,kBAAC,IAAD,CAAaC,YAAaA,SAIhC,6BACA,wBAAID,UAAU,yBAAd,cACA,wBAAIA,UAAU,cACd,6BACCb,EAAQnB,KAAI,gBAAGG,EAAH,EAAGA,KAAH,OACX,yBAAK+B,IAAK/B,EAAKgC,IACb,kBAAC,IAAD,CACEF,YAAa9B,EAAK8B,YAClBhC,MAAOsB,EAASpB,EAAKiC,OAAOlC,MAC5BmC,KAAMlC,EAAKkC,OAEb,oCAQL,IAAMC,EAAK","file":"component---src-pages-resume-js-f9d0788f3cc11d79fa6d.js","sourcesContent":["export default {\n  getImageMap: (images, regex, hasMultipleImages = false, limit = 3) => {\n    return images.reduce((map, image) => {\n      const slug = image.node.relativePath.match(regex)[0]\n      if (hasMultipleImages) {\n        if (map.hasOwnProperty(slug)) {\n          if (map[slug].length <= limit)\n            map[slug].push(image.node.childImageSharp.fluid)\n        } else {\n          const arr = []\n          arr.push(image.node.childImageSharp.fluid)\n          map[slug] = arr\n        }\n      } else {\n        map[slug] = image.node.childImageSharp.fluid\n      }\n      return map\n    }, {})\n  },\n  getInstitutionClass: name => {\n    if (name.includes(\"Waterloo\")) {\n      return `waterloo-link`\n    } else if (name.includes(\"Ottawa\")) {\n      return `ottawa-link`\n    } else {\n      return `nd-link`\n    }\n  },\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { CompanyCard, PageLayout, PageTitle, WorkHistory } from \"../components\"\nimport { SEO, Utils } from \"../utils\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Container, Col, Row } from \"react-bootstrap\"\n\nexport default ({ data }) => {\n  const institutions = data.site.siteMetadata.institutions || []\n  const history = data.allMarkdownRemark.edges || []\n  const images = data.allFile.edges || []\n  const imageMap = Utils.getImageMap(images, /\\/[work].*\\/|$/)\n  return (\n    <PageLayout>\n      <SEO title=\"Resume\" />\n      <PageTitle title=\"Resume\">\n        &nbsp;\n        <a href=\"../../surudh_bhutani_resume.pdf\" target=\"_blank\" download>\n          <FontAwesomeIcon\n            style={{ fontSize: \"2rem\" }}\n            icon={[\"fas\", \"file-download\"]}\n            className=\"icons file\"\n          />\n        </a>\n      </PageTitle>\n      <Container className=\"mt-5 pt-3\" fluid>\n        <br />\n        <h2 className=\"m-auto w-75 text-left\">Technologies</h2>\n        <hr className=\"w-75 my-0\" />\n        <br />\n        <FontAwesomeIcon icon={[\"fab\", \"java\"]} className=\"resume-icons java\" />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"js-square\"]}\n          className=\"resume-icons js\"\n        />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"html5\"]}\n          className=\"resume-icons html\"\n        />\n        <FontAwesomeIcon icon={[\"fab\", \"css3\"]} className=\"resume-icons css\" />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"swift\"]}\n          className=\"resume-icons swift\"\n        />\n        <br />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"react\"]}\n          className=\"resume-icons reactjs\"\n        />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"node\"]}\n          className=\"resume-icons nodejs\"\n        />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"bootstrap\"]}\n          className=\"resume-icons bootstrap\"\n        />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"sass\"]}\n          className=\"resume-icons github\"\n        />\n        <br />\n        <FontAwesomeIcon\n          icon={[\"fab\", \"github-alt\"]}\n          className=\"resume-icons\"\n        />\n        <FontAwesomeIcon icon={[\"fab\", \"jira\"]} className=\"resume-icons\" />\n        <FontAwesomeIcon icon={[\"fab\", \"docker\"]} className=\"resume-icons\" />\n\n        <h2 className=\"m-auto w-75 text-left\">Education</h2>\n        <hr className=\"w-75 my-0\" />\n        <br />\n        <Row className=\"w-50 m-auto\">\n          {institutions.map(frontmatter => (\n            <Col className=\"col-xl-4 col-12\">\n              <CompanyCard frontmatter={frontmatter} />\n            </Col>\n          ))}\n        </Row>\n        <br />\n        <h2 className=\"m-auto w-75 text-left\">Experience</h2>\n        <hr className=\"w-75 my-0\" />\n        <br />\n        {history.map(({ node }) => (\n          <div key={node.id}>\n            <WorkHistory\n              frontmatter={node.frontmatter}\n              image={imageMap[node.fields.slug]}\n              html={node.html}\n            />\n            <br />\n          </div>\n        ))}\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        institutions {\n          company\n          link\n          position\n          startDate\n          endDate\n          slug\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/work/\" } }\n      sort: { fields: [frontmatter___startDate], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            company\n            location\n            link\n            position\n            tags\n            startDate(formatString: \"MMMM, YYYY\")\n            endDate(formatString: \"MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    allFile(\n      filter: {\n        extension: { eq: \"png\" }\n        relativePath: { regex: \"/company/\" }\n        relativeDirectory: { regex: \"/content/work/\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}